/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de_luyen_tap.views;

import de_luyen_tap.models.DanhMuc;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Date;
import java.util.ArrayList;
import de_luyen_tap.models.Sach;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
/**
 *
 * @author tiennh
 */
public class QuanLySachForm extends javax.swing.JFrame
{
    protected Connection conn;
    protected ArrayList<Sach> listSach;
    protected ArrayList<DanhMuc> listDanhMuc;
    protected int cbTheLoaiDuocChon;
    protected DefaultTableModel model;

    /**
     * Creates new form QuanLySachForm
     */
    public QuanLySachForm() {
        initComponents();
        this.listDanhMuc = new ArrayList<>();
        this.listSach = new ArrayList<>();
        this.model = (DefaultTableModel) this.tblTable.getModel();
        
        // Khơi tạo Connection
        this.initConnection();

        // Lấy DanhMuc từ DB & hiển thị lên ComboBox
        this.loadDanhMuc();
    }
    
    public void initConnection()
    {
        try {
            // Bước 1: Load Driver
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            // Bước 2: Khai báo thông tin của Database
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quan_ly_sach",
                dbUsername = "sa",
                dbPassword = "Aa@123456";
            
            // Bước 3: Tạo Connection
            this.conn = DriverManager.getConnection(url, dbUsername, dbPassword);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    protected void loadDanhMuc()
    {
        // Bước 1: Khai báo câu query
        String query = "SELECT * FROM danh_muc";

        try {
            // Bước 2: Tạo PreparedStatement từ Connection để có thể gửi được câu query vào Database
            PreparedStatement ps = this.conn.prepareStatement(query);

            // Do câu query không có tham số nên thực thi luôn câu lệnh
            ResultSet rs = ps.executeQuery();
            
            // ResultSet cung cấp hàm next() để trỏ tới từng bản ghi do DB trả về.
            while ( rs.next() ) {
                int id = rs.getInt("id");
                String ten = rs.getString("ten_danh_muc");
                
                DanhMuc danhMuc = new DanhMuc(id, ten);

                this.listDanhMuc.add(danhMuc);

                // Thêm DanhMuc vào ComboBox
                this.cbFilter.addItem(ten);
                this.cbTheLoai.addItem(ten);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbTheLoai = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNgayNhap = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        cbFilter = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên Sách");

        jLabel2.setText("Mã Sách");

        jLabel3.setText("Thể loại");

        cbTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTheLoaiActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngày nhập");

        jLabel5.setText("Số lượng");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTheLoai, 0, 100, Short.MAX_VALUE)
                            .addComponent(txtTenSach)
                            .addComponent(txtMaSach))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtSoLuong))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách", "Số Lượng", "Ngày Nhập"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTable);

        cbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilterActionPerformed(evt);
            }
        });

        jLabel6.setText("Danh Mục");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTheLoaiActionPerformed
        String tenDanhMuc = this.cbTheLoai.getSelectedItem().toString();
        for (int i = 0; i < this.listDanhMuc.size(); i++) {
            DanhMuc item = this.listDanhMuc.get(i);
            if (item.getTen().equals(tenDanhMuc)) {
                this.cbTheLoaiDuocChon = item.getId();
                return ;
            }
        }
    }//GEN-LAST:event_cbTheLoaiActionPerformed

    private void cbFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFilterActionPerformed
        // Bước 1: tìm trong ArrayList, lấy ra DanhMuc đang được chọn
        DanhMuc danhMuc = this.getDanhMucDuocChon();
        
        // Bước 2: viết câu truy vấn
        String query = "SELECT * FROM sach WHERE danh_muc_id = ?";

        try {
            // Bước 3: Tạo PreparedStatement dựa trên Connection
            PreparedStatement ps = this.conn.prepareStatement(query);
            
            // Bước 4: Do câu query có tham số -> truyền tham số vào cho PreparedStatement
            ps.setInt(1, danhMuc.getId());
            
            // Bước 5: Sau khi truyền đủ tham số cho PreparedStatement -> thực thi câu truy vấn
            ResultSet rs = ps.executeQuery();
            
            // Xóa data cũ trong JTable & ArrayList
            this.model.setRowCount(0);
            this.listSach.clear();

            // Bước 6: Bóc dữ liệu ra từ ResultSet, add vào ArrayList & JTable
            while ( rs.next() ) {
                int id = rs.getInt("id");
                String tenSach = rs.getString("ten_sach");
                String maSach = rs.getString("ma_sach");
                int soLuong = rs.getInt("so_luong");
                Date ngayNhap = rs.getDate("ngay_nhap");
                
                Sach sach = new Sach(id, soLuong, danhMuc.getId(), tenSach, maSach, ngayNhap);
                this.listSach.add(sach);
                
                this.model.addRow(new Object[] {
                    maSach,
                    tenSach,
                    soLuong,
                    ngayNhap
                });
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_cbFilterActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String tenSach = this.txtTenSach.getText();
        String maSach = this.txtMaSach.getText();
        String soLuongStr = this.txtSoLuong.getText();
        String ngayNhapStr = this.txtNgayNhap.getText();

        int soLuong = -1;
        Date ngayNhap = null;

        // Bước 1: kiểm tra form
        if (
            tenSach.length() == 0 ||
            maSach.length() == 0 ||
            soLuongStr.length() == 0 ||
            ngayNhapStr.length() == 0
        ) {
            JOptionPane.showMessageDialog(this, "Không được để trống!");
        }
        
        try {
            soLuong = Integer.parseInt(soLuongStr);

            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!");
                return ;
            }

            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-mm-dd");
            java.util.Date date = sdf.parse(ngayNhapStr);
            
            ngayNhap = new java.sql.Date( date.getTime() );
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!");
            nfe.printStackTrace();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Ngày nhập không hợp lệ!");
            ex.printStackTrace();
        }
        
        // Bước 2: viết câu truy vấn
        String query = "INSERT INTO sach(ten_sach, ma_sach, so_luong, ngay_nhap, danh_muc_id)"
            + " OUTPUT INSERTED.ID VALUES (?, ?, ?, ?, ?)";
        
        try {
            // Bước 3: Tạo PreparedStatement dựa trên Connection
            PreparedStatement ps = this.conn.prepareStatement(query);
            
            // Bước 4: Do câu truy vấn có tham số -> truyền tham số vào PreparedStatement
            ps.setString(1, tenSach);
            ps.setString(2, maSach);
            ps.setInt(3, soLuong);
            ps.setDate(4, ngayNhap);
            ps.setInt(5, this.cbTheLoaiDuocChon);
            
            ps.execute();

            JOptionPane.showMessageDialog(this, "Thêm thể loại thành công!");
            this.model.addRow(new Object[] {
                maSach,
                tenSach,
                soLuong,
                ngayNhap
            });
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySachForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        this.txtMaSach.setText("");
        this.txtTenSach.setText("");
        this.txtSoLuong.setText("");
        this.txtNgayNhap.setText("");
        this.cbTheLoai.setSelectedIndex(0);
        this.txtMaSach.setEditable(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseClicked
        int row = this.tblTable.getSelectedRow();
        if (row == -1) {
            return ;
        }

        String maSach = this.tblTable.getValueAt(row, 0).toString();
        String tenSach = this.tblTable.getValueAt(row, 1).toString();
        String soLuongStr = this.tblTable.getValueAt(row, 1).toString();
        String ngayNhapStr = this.tblTable.getValueAt(row, 1).toString();
        
        this.txtMaSach.setText(maSach);
        this.txtTenSach.setText(tenSach);
        this.txtSoLuong.setText(soLuongStr);
        this.txtNgayNhap.setText(ngayNhapStr);
        
        this.txtMaSach.setEditable(false);
    }//GEN-LAST:event_tblTableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = this.tblTable.getSelectedRow();
        if (row == -1) {
            return ;
        }
        
        // Bước 1: Viết câu truy vấn
        String query = "DELETE FROM sach WHERE ma_sach = ?";
        String maSach = this.tblTable.getValueAt(row, 0).toString();

        try {
            // Bước 2: Tạo PreparedStatement từ Connection
            PreparedStatement ps = this.conn.prepareStatement(query);
            
            // Bước 3: do câu truy vấn có tham số -> truyền tham số cho PreparedStatement
            ps.setString(1, maSach);
            
            // Bước 4: Thực thi câu truy vấn
            ps.execute();
            
            // Bước 5: Xóa khỏi JTable & ArrayList
            this.model.removeRow(row);
            System.out.println(row);
            this.listSach.remove(row);
            JOptionPane.showMessageDialog(this, "Xóa bản ghi thành công!");
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySachForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    protected DanhMuc getDanhMucDuocChon()
    {
        // Bước 1: Truy xuất tới ComboBox, lấy ra tên của DanhMuc đang được chọn
        String tenDanhMuc = this.cbFilter.getSelectedItem().toString();
        
        DanhMuc danhMuc = null;
        // Bước 2: Duyệt ArrayList, tìm DanhMuc theo tên
        for (int i = 0; i < this.listDanhMuc.size(); i++) {
            DanhMuc item = this.listDanhMuc.get(i);
            if (item.getTen().equals(tenDanhMuc)) {
                danhMuc = item;
                break;
            }
        }
        
        return danhMuc;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySachForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySachForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySachForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySachForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySachForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbFilter;
    private javax.swing.JComboBox<String> cbTheLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSach;
    // End of variables declaration//GEN-END:variables

}
